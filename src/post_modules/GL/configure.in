AC_INIT(top.c)
AC_CONFIG_HEADER(config.h)

PIKE_FEATURE_WITHOUT(GL)
PIKE_FEATURE_WITHOUT(GL.GLSL)

# Rename the dynamic module from GL.so to GL.pmod/module.so
# to avoid shadowing stuff in GL.pmod/.
AC_MODULE_INIT(GL.module)

AC_ARG_WITH(GL,  [  --without-GL       no support for GL],[],[with_GL=yes])

AUTO_OBJS=""

if test x$with_GL = xno; then
  :
else

  AC_PATH_XTRA()

  AC_ARG_WITH(lib-GL,     [  --with-lib-GL           use '-lGL'])
  AC_ARG_WITH(lib-MesaGL, [  --with-lib-MesaGL       use '-lMesaGL'])

  PIKE_FEATURE_NODEP(GL)
  PIKE_FEATURE_NODEP(GL.GLSL)

  old_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$X_CFLAGS $CPPFLAGS"
  AC_CHECK_HEADERS(windef.h GL/gl.h GL/glx.h)

  # MacOS X.
  # FIXME: Should really have a separate test for -framework.
  CPPFLAGS="-DGL_SILENCE_DEPRECATION -DGL_EXT_texture $old_CPPFLAGS"
  AC_CHECK_HEADERS(OpenGL/gl.h)
  if test "x$ac_cv_header_OpenGL_gl_h" = "xno"; then
    CPPFLAGS="$old_CPPFLAGS"
  else
    mac=1
  fi


  if test "x$ac_cv_header_windef_h$ac_cv_header_OpenGL_gl_h$ac_cv_header_GL_gl_h$ac_cv_header_GL_glx_h" = "xnononono"; then
    # Solaris 7 comes with libGL, but without the headerfiles by default.
    :
  else
    if test x$mac = x ; then
      AC_CHECK_LIB(X11,XDrawPoint)
      AC_CHECK_LIB(Xext,XShmPutImage)
    AC_CHECK_LIB(GL, glOrtho, AC_DEFINE_UNQUOTED(HAVE_LIBGL),,[$X_LIBS $X_PRE_LIBS -lXext -lX11 $X_EXTRA_LIBS])
    AC_CHECK_LIB(MesaGL, glOrtho, AC_DEFINE_UNQUOTED(HAVE_LIBMESAGL),,[$X_LIBS $X_PRE_LIBS -lXext -lX11 $X_EXTRA_LIBS])
    oldLIBS="$LIBS"
    AC_MSG_CHECKING(for glOrtho in -lOpenGL)
    AC_CACHE_VAL(pike_cv_lib_OpenGL, [
      LIBS="$oldLIBS -lOpenGL"
      AC_TRY_LINK([
#ifdef HAVE_WINDEF_H
#include <windef.h>
#endif /* HAVE_WINDEF_H */
#ifdef HAVE_GL_GL_H
#include <GL/gl.h>
#endif /* HAVE_GL_GL_H */
      ], [ glOrtho(0.0,0.0,0.0,0.0,0.0,0.0); ], [ pike_cv_lib_OpenGL=yes ], [ pike_cv_lib_OpenGL=no ])
    ])
    if test x"$pike_cv_lib_OpenGL" = xyes; then
      AC_MSG_RESULT(yes)
      AC_DEFINE_UNQUOTED(HAVE_LIBOPENGL)
    else
      AC_MSG_RESULT(no)
    fi
    AC_MSG_CHECKING(for glOrtho in -lOpenGL32)
    AC_CACHE_VAL(pike_cv_lib_OpenGL32, [
      LIBS="$oldLIBS -lOpenGL32"
      AC_TRY_LINK([
#include <windows.h>
#ifdef HAVE_WINDEF_H
#include <windef.h>
#endif /* HAVE_WINDEF_H */
#ifdef HAVE_GL_GL_H
#include <GL/gl.h>
#endif /* HAVE_GL_GL_H */
      ], [ glOrtho(0.0,0.0,0.0,0.0,0.0,0.0); ], [ pike_cv_lib_OpenGL32=yes ], [ pike_cv_lib_OpenGL32=no ])
    ])
    if test x"$pike_cv_lib_OpenGL32" = xyes; then
      AC_MSG_RESULT(yes)
      AC_DEFINE_UNQUOTED(HAVE_LIBOPENGL32)
    else
      AC_MSG_RESULT(no)
    fi
    fi # End not mac

    # MacOS X
    AC_MSG_CHECKING(for glOrtho in OpenGL.framework)
    AC_CACHE_VAL(pike_cv_framework_OpenGL, [
      LIBS="$oldLIBS -framework OpenGL"
      AC_TRY_LINK([
#include <OpenGL/gl.h>
      ], [glOrtho(0.0,0.0,0.0,0.0,0.0,0.0); ], [ pike_cv_framework_OpenGL=yes ], [ pike_cv_framework_OpenGL=no ])
    ])
    if test x"$pike_cv_framework_OpenGL" = xyes; then
      AC_DEFINE(HAVE_GL)
      AC_MSG_RESULT(yes)
    else
      AC_MSG_RESULT(no)
    fi
    LIBS="$oldLIBS"

    tmp_gl_fail=no
    if test x"$pike_cv_framework_OpenGL" = xyes; then
      LIBS="-framework OpenGL $LIBS"
    elif test x"$with_lib_GL" = "xyes" -a x"$ac_cv_lib_GL_glOrtho" = xyes; then
      LIBS="-lGL $LIBS $X_LIBS $X_PRE_LIBS -lXext -lX11 $X_EXTRA_LIBS"
    elif test x"$with_lib_GL" = "xyes" -a x"$pike_cv_lib_OpenGL" = xyes; then
      LIBS="-lOpenGL $LIBS"
    elif test x"$with_lib_GL" = "xyes" -a x"$pike_cv_lib_OpenGL32" = xyes; then
      LIBS="-lOpenGL32 $LIBS"
    elif test x"$with_lib_MesaGL" = "xyes" -a x"$ac_cv_lib_MesaGL_glOrtho" = xyes; then
      LIBS="-lMesaGL $LIBS $X_LIBS $X_PRE_LIBS -lXext -lX11 $X_EXTRA_LIBS"
    elif test x"$ac_cv_lib_GL_glOrtho" = xyes; then
      LIBS="-lGL $LIBS"
    elif test x"$pike_cv_lib_OpenGL" = xyes; then
      LIBS="-lOpenGL $LIBS"
    elif test x"$pike_cv_lib_OpenGL32" = xyes; then
      LIBS="-lOpenGL32 $LIBS"
    elif test x"$ac_cv_lib_MesaGL_glOrtho" = xyes; then
      LIBS="-lMesaGL $LIBS $X_LIBS $X_PRE_LIBS -lXext -lX11 $X_EXTRA_LIBS"
    else
      AC_MSG_WARN([No GL or MesaGL libraries, disabling GL support.])
      tmp_gl_fail=yes
    fi

    if test x"$tmp_gl_fail" = xno; then
      AC_DEFINE(HAVE_GL)
      PIKE_FEATURE_OK(GL)
      AUTO_OBJS="auto.o"

      if test "x$ac_cv_header_GL_gl_h"; then
	  AC_CHECK_HEADER([GL/glext.h], [], [], [#include <GL/gl.h>])
      else
	  AC_CHECK_HEADER([OpenGL/glext.h], [], [], [#include <OpenGL/gl.h])
      fi

      AC_CHECK_LIB(GL, glCompileShader)
      # GL_GLEXT_PROTOTYPES needed to get the prototypes tested below.
      AC_DEFINE(GL_GLEXT_PROTOTYPES, [1], [Needed to get prototypes])
      AC_CHECK_FUNCS([glGenFramebuffersEXT glGenRenderbuffersEXT glGenerateMipmapEXT glGenBuffers])

      AC_MSG_CHECKING(whether to enable GLSL)
      if test "x$ac_cv_header_GL_glext_h$ac_cv_lib_GL_glCompileShader" = "xyesyes"; then
	  AC_MSG_RESULT(yes)
	  AC_DEFINE(HAVE_GLSL, [1], [Define to enable GLSL,])
	  PIKE_FEATURE_OK(GL.GLSL)
	  AUTO_OBJS="$AUTO_OBJS GLSL.o"
      else
	  AC_MSG_RESULT(no)
      fi
    fi

  fi

fi

if test -z "$AUTO_OBJS"; then
  X_CFLAGS=""
fi

AC_SUBST(AUTO_OBJS)
AC_OUTPUT(Makefile,echo FOO >stamp-h )

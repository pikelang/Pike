/* -*- C -*- */
class GTK2.Plug;
inherit GTK2.Window;

//! Together with W(Socket), GTK2.Plug provides the ability to embed
//! widgets from one process into another process in a fashion that is
//! transparent to the user. One process creates a W(Socket) widget
//! and, passes the XID of that widgets window to the other process,
//! which then creates a GTK2.Plug window with that XID. Any widgets
//! contained in the GTK2.Plug then will appear inside the first
//! applications window.


//! Properties
require gtk212;
//! int embedded
endrequire;

signal embedded;

void create(int|mapping(string:mixed) socket_id_or_props)
//! Create a new plug, the socket_id is the window into which this plug
//! will be plugged.
{
  pgtk2_verify_not_inited();
  pgtk2_verify_setup();
  {
    if (TYPEOF(Pike_sp[-args]) == PIKE_T_INT) {
      INT64 id;
      GtkWidget *gp;
      get_all_args(NULL, args, "%l", &id);
      gp = gtk_plug_new((GdkNativeWindow)(ptrdiff_t)id);
      THIS->obj=G_OBJECT(gp);
    } else {
      INIT_WITH_PROPS(GTK_TYPE_PLUG);
    }
    pgtk2_pop_n_elems(args);
  }
  pgtk2__init_this_object();
}

int get_id()
//! Gets the window id of this widget.
{
  pgtk2_verify_inited();
  {
    /* NB: GdkNativeWindow is a pointer type on NT and MacOS X. */
    GdkNativeWindow a1;
    a1 = gtk_plug_get_id( GTK_PLUG(THIS->obj) );
    my_pop_n_elems(args);
    PGTK_PUSH_INT( (ptrdiff_t)a1 );
  }
}

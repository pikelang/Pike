/* -*- C -*- */
class GTK2.IconSize;

//! Iconsize.

string get_name(int size)
//! Gets the canonical name of the given icon size.
{
  INT_TYPE size;
  const gchar *res;
  get_all_args(NULL,args,"%i",&size);
  res=gtk_icon_size_get_name(size);
  pgtk2_pop_n_elems(args);
  PGTK_PUSH_GCHAR(res);
}

int from_name(string name)
//! Looks up the icon size associated with name.
{
  char *name;
  int res;
  get_all_args(NULL,args,"%c",&name);
  res=gtk_icon_size_from_name(name);
  pgtk2_pop_n_elems(args);
  PGTK_PUSH_INT(res);
}

void register_alias(string alias, int target)
//! Registers alias as another name for target. So calling 
//! GTK2.IconSize->from_name() with alias will return target.
{
  char *alias;
  INT_TYPE target;
  get_all_args(NULL,args,"%c%i",&alias,&target);
  gtk_icon_size_register_alias(alias,target);
  RETURN_THIS();
}

int register(string name, int width, int height)
//! Registers a new icon size, along the same lines as GTK2.ICON_SIZE_MENU, etc.
//! Returns the integer value for the size.
{
  char *name;
  INT_TYPE width,height;
  int res;
  get_all_args(NULL,args,"%c%i%i",&name,&width,&height);
  res=gtk_icon_size_register(name,width,height);
  pgtk2_pop_n_elems(args);
  PGTK_PUSH_INT(res);
}

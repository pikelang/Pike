AC_INIT(ffmpeg.c)
AC_CONFIG_HEADER(config.h)

PIKE_FEATURE_WITHOUT(FFmpeg)

  incdirs="$with_root/usr/local/include $with_root/usr/local/include/libffmpeg $with_root/usr/local/include/libavcodec $with_root/usr/include $with_root/usr/include/libffmpeg $with_root/usr/include/libavcodec $with_root/opt/ffmpeg/include $with_root/opt/libffmpeg/include $with_root/opt/libavcodec/include no"

AC_ARG_WITH(ffmpeg,     [  --without-ffmpeg      no support for FFmpeg],[],[with_ffmpeg=yes])

AC_MODULE_INIT()
if test x$with_ffmpeg = xyes ; then
  PIKE_FEATURE_NODEP(FFmpeg)

  AC_MSG_CHECKING(for Ffmpeg include-directory)
  AC_CACHE_VAL(pike_cv_ffmpeg_include_dir, [
    for pike_cv_ffmpeg_include_dir in $incdirs; do
      if test -d $pike_cv_ffmpeg_include_dir/avcodec.h; then
        break
      elif test -d $pike_cv_ffmpeg_include_dir/ffmpeg/avcodec.h; then
        break
      elif test -d $pike_cv_ffmpeg_include_dir/libffmpeg/avcodec.h; then
        break
      elif test -d $pike_cv_ffmpeg_include_dir/libavcodec/avcodec.h; then
        break
      else
        :
      fi
    done
  ])
  AC_MSG_RESULT($pike_cv_ffmpeg_include_dir)
  if test x$pike_cv_ffmpeg_include_dir = xno; then :; else
    echo Adding $pike_cv_ffmpeg_include_dir to the include search path.
    CPPFLAGS="${CPPFLAGS} -I$pike_cv_ffmpeg_include_dir"
  fi

  AC_CHECK_HEADERS([avcodec.h ffmpeg/avcodec.h libffmpeg/avcodec.h \
                    libavcodec/avcodec.h libavutil/avutil.h \
                    libavutil/attributes.h])

dnl ffmpeg and avcodec are the same libs... with 2 differents..
dnl don't ask me why.
dnl hop: libavcodec is Ffmpeg's native name, libffmpeg should
dnl      be libavcode + libav libraries together

dnl my libavcodec needs libmp3lame that needs libm /Mirar

  AC_CHECK_LIB( m, pow, [
    LIBS="${LIBS-} -lm"
  ])

  AC_CHECK_LIB( mp3lame, lame_get_copyright, [
    AC_DEFINE(HAVE_LIBMP3LAME)
    LIBS="${LIBS-} -lmp3lame"
  ])

  AC_CHECK_LIB( avcodec, avcodec_find_decoder, [
    AC_DEFINE(HAVE_LIBAVCODEC)
    LIBS="${LIBS-} -lavcodec"
    got_lib=yes
    PIKE_FEATURE(FFmpeg,[yes (using libavcodec)])

    AC_CHECK_LIB( avformat, first_oformat, [
      AC_DEFINE(HAVE_LIBAVFORMAT)
      LIBS="${LIBS-} -lavformat -lavcodec" dnl both (again)
      PIKE_FEATURE(FFmpeg,[yes (using libavcodec and libavformat)])
    ])

    AC_CHECK_LIB( avutil, avutil_version, [
      AC_DEFINE(HAVE_LIBAVUTIL)
      LIBS="${LIBS-} -lavutil -lavcodec" dnl both (again)
      PIKE_FEATURE(FFmpeg,[yes (using libavcodec and libavutil)])
    ])
  ])
  AC_CHECK_LIB( ffmpeg, avcodec_find_decoder, [
    AC_DEFINE(HAVE_LIBFFMPEG)
    LIBS="${LIBS-} -lffmpeg"
    got_lib=yes
    PIKE_FEATURE(FFmpeg,[yes (using libffmpeg)])
    ])

  if test x"$got_lib" = x"yes"; then
    AC_MSG_CHECKING([if library is really working])
    AC_CACHE_VAL(pike_cv_ffmpeg_working, [
      AC_TRY_COMPILE([
#ifdef HAVE_LIBAVCODEC_AVCODEC_H
#include <libavcodec/avcodec.h>
#else
#ifdef HAVE_FFMPEG_AVCODEC_H
#include <ffmpeg/avcodec.h>
#else
#ifdef HAVE_LIBFFMPEG_AVCODEC_H
#include <libffmpeg/avcodec.h>
#else
#ifdef HAVE_AVCODEC_H
#include <avcodec.h>
#endif
#endif
#endif
#endif
      ], [
    extern AVCodec *thecodec;

    thecodec->type = 0;
      ], [
        pike_cv_ffmpeg_working=yes
      ], [
        pike_cv_ffmpeg_working=no
      ])
    ])
    AC_MSG_RESULT($pike_cv_ffmpeg_working)
    if test "x$pike_cv_ffmpeg_working" = "xyes"; then
      AC_DEFINE(HAVE_WORKING_LIBFFMPEG)
      dnl PIKE_FEATURE(FFmpeg)

      AC_CHECK_FUNCS([avcodec_decode_audio avcodec_decode_audio2 \
	              avcodec_decode_audio3 avcodec_decode_audio4 \
                      avcodec_alloc_context avcodec_alloc_context2 avcodec_alloc_context3 \
                      av_codec_next avcodec_open avcodec_open2 avcodec_close \
                      avcodec_alloc_frame avcodec_get_frame_defaults avcodec_free_frame \
                      avcodec_register_all av_codec_iterate av_packet_alloc \
                      av_codec_is_encoder av_codec_is_decoder
		    ])
    else
      PIKE_FEATURE(FFmpeg,[no (not working)])
    fi


    AC_MSG_CHECKING([if UINT8 et al are redefined])
    AC_CACHE_VAL(pike_cv_ffmpeg_UINT8, [
      AC_TRY_COMPILE([
#define UINT8 "hepp"
#ifdef HAVE_LIBAVCODEC_AVCODEC_H
#include <libavcodec/avcodec.h>
#else
#ifdef HAVE_FFMPEG_AVCODEC_H
#include <ffmpeg/avcodec.h>
#else
#ifdef HAVE_LIBFFMPEG_AVCODEC_H
#include <libffmpeg/avcodec.h>
#else
#ifdef HAVE_AVCODEC_H
#include <avcodec.h>
#endif
#endif
#endif
#endif
        ], [
	char *v=UINT8;
	return v[0]=='h'; /* not run anyway, but... */
        ], [
          pike_cv_ffmpeg_UINT8=no
        ], [
          pike_cv_ffmpeg_UINT8=yes
        ])
      ])
      AC_MSG_RESULT($pike_cv_ffmpeg_UINT8)
      if test "x$pike_cv_ffmpeg_UINT8" = "xyes"; then
        AC_DEFINE(FFMPEG_REDEFINES_UINT8)
      fi

    AC_MSG_CHECKING([if uint8_t is defined])
    AC_CACHE_VAL(pike_cv_ffmpeg_uint8_t, [
      AC_TRY_COMPILE([
#ifdef HAVE_LIBAVCODEC_AVCODEC_H
#include <libavcodec/avcodec.h>
#else
#ifdef HAVE_FFMPEG_AVCODEC_H
#include <ffmpeg/avcodec.h>
#else
#ifdef HAVE_LIBAVCODEC_AVCODEC_H
#include <libffmpeg/avcodec.h>
#else
#ifdef HAVE_AVCODEC_H
#include <avcodec.h>
#endif
#endif
#endif
#endif
      ], [
	uint8_t s[20];
      ], [
        pike_cv_ffmpeg_uint8_t=yes
      ], [
        pike_cv_ffmpeg_uint8_t=no
      ])
    ])
    AC_MSG_RESULT($pike_cv_ffmpeg_uint8_t)
    if test "x$pike_cv_ffmpeg_uint8_t" = "xyes"; then
      AC_DEFINE(HAVE_UINT8_T)
    fi

    AC_MSG_CHECKING(if AVCodecContext has frame_rate)
    AC_CACHE_VAL(pike_cv_AVCodecContext_has_frame_rate, [
      AC_TRY_COMPILE([
#ifdef HAVE_LIBAVCODEC_AVCODEC_H
#include <libavcodec/avcodec.h>
#else
#ifdef HAVE_FFMPEG_AVCODEC_H
#include <ffmpeg/avcodec.h>
#else
#ifdef HAVE_FFMPEG_AVCODEC_H
#include <libffmpeg/avcodec.h>
#else
#ifdef HAVE_AVCODEC_H
#include <avcodec.h>
#endif
#endif
#endif
#endif
      ], [
        AVCodecContext context;
	context.frame_rate = 0;
      ], pike_cv_AVCodecContext_has_frame_rate=yes,
      pike_cv_AVCodecContext_has_frame_rate=no)
    ])
    AC_MSG_RESULT($pike_cv_AVCodecContext_has_frame_rate)
    if test "x$pike_cv_AVCodecContext_has_frame_rate" = "xyes"; then
      AC_DEFINE(HAVE_AVCODECCONTEXT_FRAME_RATE)
    fi

    AC_MSG_CHECKING(if AVCodec has encode2)
    AC_CACHE_VAL(pike_cv_AVCodec_has_encode2, [
      AC_TRY_COMPILE([
#ifdef HAVE_LIBAVCODEC_AVCODEC_H
#include <libavcodec/avcodec.h>
#else
#ifdef HAVE_FFMPEG_AVCODEC_H
#include <ffmpeg/avcodec.h>
#else
#ifdef HAVE_FFMPEG_AVCODEC_H
#include <libffmpeg/avcodec.h>
#else
#ifdef HAVE_AVCODEC_H
#include <avcodec.h>
#endif
#endif
#endif
#endif
      ], [
        AVCodec codec;
	codec.encode2 = 0;
      ], pike_cv_AVCodec_has_encode2=yes,
      pike_cv_AVCodec_has_encode2=no)
    ])
    AC_MSG_RESULT($pike_cv_AVCodec_has_encode2)
    if test "x$pike_cv_AVCodec_has_encode2" = "xyes"; then
      AC_DEFINE(HAVE_AVCODEC_ENCODE2)
    fi

    AC_CHECK_MEMBER(AVCodecContext.ch_layout,[
      AC_DEFINE(HAVE_AVCODECCONTEXT_CH_LAYOUT)],,[[
#ifdef HAVE_LIBAVCODEC_AVCODEC_H
#include <libavcodec/avcodec.h>
#else
#ifdef HAVE_FFMPEG_AVCODEC_H
#include <ffmpeg/avcodec.h>
#else
#ifdef HAVE_LIBFFMPEG_AVCODEC_H
#include <libffmpeg/avcodec.h>
#else
#ifdef HAVE_AVCODEC_H
#include <avcodec.h>
#endif
#endif
#endif
#endif]])
  fi
fi

AC_OUTPUT(Makefile,echo FOO >stamp-h )
